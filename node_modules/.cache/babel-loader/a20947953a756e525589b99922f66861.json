{"ast":null,"code":"var _jsxFileName = \"/Users/indianic/Desktop/react/section18/demo2/src/pages/UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"reactstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { addUser, getSingleUser } from \"../redux/actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateUser = () => {\n  _s();\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    age: \"\",\n    gender: \"\",\n    country: \"\",\n    password: \"\"\n  });\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    name,\n    email\n  } = formState;\n  useEffect(() => {\n    dispatch(getSingleUser(id));\n  }, [dispatch, id]);\n\n  const handleTextChange = event => {\n    let {\n      name,\n      value\n    } = event.target;\n    setFormState({ ...formState,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(formState);\n    dispatch(addUser(formState));\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"form\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"name\",\n            name: \"name\",\n            type: \"text\",\n            value: name,\n            onChange: handleTextChange,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"email\",\n            name: \"email\",\n            value: email,\n            type: \"email\",\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => history.push(\"/\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUser, \"9LGiIvknCkD2fqVGgTN5CL/JoIk=\", false, function () {\n  return [useParams, useHistory, useDispatch];\n});\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/Users/indianic/Desktop/react/section18/demo2/src/pages/UpdateUser.js"],"names":["React","Fragment","useState","useEffect","useDispatch","Button","useHistory","useParams","addUser","getSingleUser","UpdateUser","formState","setFormState","name","email","phone","age","gender","country","password","id","history","dispatch","handleTextChange","event","value","target","handleSubmit","preventDefault","console","log","push"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"reactstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { addUser, getSingleUser } from \"../redux/actions/index\";\nconst UpdateUser = () => {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    age: \"\",\n    gender: \"\",\n    country: \"\",\n    password: \"\",\n  });\n\n  const { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { name, email } = formState;\n\n  useEffect(() => {\n    dispatch(getSingleUser(id));\n  }, [dispatch, id]);\n\n  const handleTextChange = (event) => {\n    let { name, value } = event.target;\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    dispatch(addUser(formState));\n    history.push(\"/\");\n  };\n\n  return (\n    <Fragment>\n      <h2>Edit User</h2>\n\n      <form name=\"form\" onSubmit={handleSubmit}>\n        <div>\n          <div>\n            <label>Name: </label>\n            <input\n              autoComplete=\"name\"\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={handleTextChange}\n              autoFocus\n            />\n          </div>\n          <div>\n            <label>Email : </label>\n            <input\n              autoComplete=\"email\"\n              name=\"email\"\n              value={email}\n              type=\"email\"\n              onChange={handleTextChange}\n            />\n          </div>\n          {/* <div>\n            <label>Phone : </label>\n            <input\n              autoComplete=\"phone\"\n              name=\"phone\"\n              value={phone}\n              type=\"number\"\n              onChange={handleTextChange}\n            />\n          </div>\n          <div>\n            <label>Age : </label>\n            <input\n              autoComplete=\"age\"\n              name=\"age\"\n              value={age}\n              type=\"number\"\n              onChange={handleTextChange}\n            />\n          </div>\n          <div name=\"gender\" autoComplete=\"gender\" onChange={handleTextChange}>\n            <label>Gender : </label>\n            <input type=\"radio\" name=\"gender\" value=\"Male\" />\n            <label>Male</label>\n            <input type=\"radio\" name=\"gender\" value=\"Female\" />\n            <label>Female</label>\n          </div>\n\n          <div\n            name=\"country\"\n            autoComplete=\"country\"\n            onChange={handleTextChange}\n          >\n            <label>Country: </label>\n            <select id=\"country\" selected={country} name=\"country\">\n              <option value=\"India\">India</option>\n              <option value=\"USA\">USA</option>\n              <option value=\"Canada\">Canada</option>\n              <option value=\"London\">London</option>\n            </select>\n          </div>\n          <div>\n            <label>Password: </label>\n            <input\n              name=\"password\"\n              autoComplete=\"password\"\n              type=\"password\"\n              onChange={handleTextChange}\n            />\n          </div> */}\n          <Button type=\"submit\">Submit</Button>\n          <Button onClick={() => history.push(\"/\")}>Cancel</Button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}